#include <iostream>

//Fibonacci Recursive Function w/ Memoization (input index, output value at given index)
//The reason why memoization is important for this function, is because without it
//The fibonacci recursive function is an excesive recursive function
//To reduce the amount of function calls that it will make, we can create a global key,
//Where the function checks the key before making a function call to reduce the amount of function calls

//Declare the static variable
static int F[10];


int fib(int n) {

	//The first two fibonacci numbers are 0, and 1. Thus, if n is = to either 0 OR 1, return n
	if (n <= 1) {

		//We not only want to return n, but prior to returning n, we want to store the value of
		//n inside of the array at the n'th positon, and we know the first starting points of the array
		//are 0 and 1
		F[n] = n;
		return n;
	}

	else {

		//Prior to making any calls, we have to check the array to see if any values have been stored
		//The array was initialized to -1
		//for the 3rd to last position, (n-2) , (n-1), (n)
		//If a value has not been stored, then we want to make the call
		//And the value that we get from that call, we want to store it into the array at that value
		if (F[n - 2] == -1) {
			F[n - 2] = fib(n - 2);
		}
		//We want to do the same for the second to last value, (n-2), (n-1), (n)
		//We know that once all of the values in the array have been stored, there wont be any more calls left
		if (F[n - 1] == -1) {
			F[n - 1] = fib(n - 1);
		}


		F[n] = F[n - 2] + F[n - 1];
		//Since all of the array values are filled and both if statements are false
		//We know our array has been filled with both (n-2) and (n-1) so we just  return it
		return F[n - 2] + F[n - 1];
	}


};








int main() {

	//Create a static array for memoization of recursive array
	//Static / Global variables are in the stack
	//The static array holds all of the fibonnaci values as well

	// initialize global array F with the value of -1
	//size of F has the total amount of bytes that the array has, size of int, is the data type of the array
	//And signifies the bytes of that particular data type, dividing the total amount by the size of data type
	// gives you the number of elements within the array
	//For loop iterates through the array, initializing it with the value of -1
	//-1 is arbitrary which symbolizes that we do not yet have a number for our array key

	for (int i = 0; i < sizeof(F) / sizeof(int); i++) {
		F[i] = -1;

		std::cout << F[i] << '\n';
	}

	//Enter an index to receieve the fibonnaci value
	std::cout << '\n' << fib(8) << '\n' << '\n';


	//Print the values of the static array after the fibonnaci function
	for (int i = 0; i < sizeof(F) / sizeof(int); i++) {
		std::cout << F[i] << '\n';
	}

	return 0;

};













/*-------------------------------------------------------------------------------------------------------------------------- -

int fun1(int n) {


	//fun1(5) makes calls all the way to fun(0)
	//fun(0) returns back to fun(1)
	//fun(1) + 2 = 3, 3 is the new value of fun
	// fun(3) + 3(which was the value of the caller at the time) = 6
	//all the way back up to fun(5), fun(10) + 5 is 15

	if (n > 0) {


		return fun1(n - 1) + n;
	};

	return 0;

};

int main() {

	int x = 5;


	std::cout << fun1(x) << '\n';

	return 0;

};



-------------------------------------------------------------------------------------------------------------------------- -





//Indirect recursion

void funB(int n);
void funA(int n);

void funA(int n) {

	if (n > 0) {

		std::cout << n << '\n';

		funB(n - 1);
	}

};

void funB(int n) {

	if (n > 1) {

		std::cout << n << '\n';

		funA(n / 2);
	}

};


int main() {



	funA(20);

	return 0;

};



















-------------------------------------------------------------------------------------------------------------------------- -

//Exponent function w/ recursion
//This recursive function goes down the tree n-1 times
//at the bottom of the tree, its returning 1, then coming back, * m is evaluated with 1
// this is done until it comes back to the top of the tree, n-1 times

int powerFunction(int m, int n) {

	if (n == 0) {
		return 1;
	}
	else {
		return powerFunction(m, n - 1) * m;
	}
};

int main() {


	std::cout << powerFunction(2, 16) + 1;


	return 0;

};



-------------------------------------------------------------------------------------------------------------------------- -







// Optimized recursive function


int powerFunction(int m, int n) {

	if (n == 0) {
		return 1;
	}

	if (n % 2 == 0) {
		return powerFunction(m * m, n / 2);
	}
	else {
		return m * powerFunction(m * m, (n - 1) / 2);
	}

};

int main() {


	std::cout << powerFunction(2, 5);

	return 0;

};


















-------------------------------------------------------------------------------------------------------------------------- -


//Recursive fibonacci series

int fib(int n) {
	if (n <= 1) {
		return n;
	}
	else {
		return fib((n - 2)) + fib((n - 1));
	}

};



int main() {




	return 0;

};



-------------------------------------------------------------------------------------------------------------------------- -








//Loop fibonacci series


int fib(int n) {

	int t0 = 0;
	int t1 = 1;
	int s = 0;
	int i = 0;

	if (n <= 1) {
		return n;
	}
	for (i = 2; i <= n; i++) {
		s = t0 + t1;
		t0 = t1;
		t1 = s;
	}
	return s;

};



int main() {

	std::cout << fib(3);


	return 0;

};


















-------------------------------------------------------------------------------------------------------------------------- -


#include <iostream>

//Fibonacci Recursive Function w/ Memoization (input index, output value at given index)
//The reason why memoization is important for this function, is because without it
//The fibonacci recursive function is an excesive recursive function
//To reduce the amount of function calls that it will make, we can create a global key,
//Where the function checks the key before making a function call to reduce the amount of function calls

//Declare the static variable
static int F[10];


int fib(int n) {

	//The first two fibonacci numbers are 0, and 1. Thus, if n is = to either 0 OR 1, return n
	if (n <= 1) {

	//We not only want to return n, but prior to returning n, we want to store the value of
	//n inside of the array at the n'th positon, and we know the first starting points of the array
	//are 0 and 1
		F[n] = n;
		return n;
	}

	else {

		//Prior to making any calls, we have to check the array to see if any values have been stored
		//The array was initialized to -1
		//for the 3rd to last position, (n-2) , (n-1), (n)
		//If a value has not been stored, then we want to make the call
		//And the value that we get from that call, we want to store it into the array at that value
		if (F[n - 2] == -1) {
			F[n - 2] = fib(n - 2);
		}
		//We want to do the same for the second to last value, (n-2), (n-1), (n)
		//We know that once all of the values in the array have been stored, there wont be any more calls left
		if (F[n - 1] == -1) {
			F[n - 1] = fib(n - 1);
		}


		F[n] = F[n -2] + F[n - 1];
		//Since all of the array values are filled and both if statements are false
		//We know our array has been filled with both (n-2) and (n-1) so we just  return it
		return F[n - 2] + F[n - 1];
	}


};








int main() {

//Create a static array for memoization of recursive array
//Static / Global variables are in the stack
//The static array holds all of the fibonnaci values as well

// initialize global array F with the value of -1
//size of F has the total amount of bytes that the array has, size of int, is the data type of the array
//And signifies the bytes of that particular data type, dividing the total amount by the size of data type
// gives you the number of elements within the array
//For loop iterates through the array, initializing it with the value of -1
//-1 is arbitrary which symbolizes that we do not yet have a number for our array key

	for (int i = 0; i < sizeof(F) / sizeof(int); i++) {
		F[i] = -1;

		std::cout << F[i] << '\n';
	}

	//Enter an index to receieve the fibonnaci value
	std::cout << '\n' << fib(8) << '\n'  << '\n';


	//Print the values of the static array after the fibonnaci function
	for (int i = 0; i < sizeof(F) / sizeof(int); i++) {
		std::cout << F[i] << '\n';
	}

	return 0;

};

-------------------------------------------------------------------------------------------------------------------------- -






//NCR determines how many combinations you can achieve with N value and r grouping
//Pascals triangle

int ncr(int n, int r) {

	if (r == 0 || n == r) {
		return 1;
	}
	else {
		return ncr(n - 1, r - 1) + ncr(n - 1, r);
	}

};





int main() {

//N == Value, R == Number of combinations you want to achieve


	std::cout << ncr(18, 2);
	return 0;

};


















-------------------------------------------------------------------------------------------------------------------------- -


#include <iostream>



int fact(int n) {
	if (n == 0) {
		return 1;
	}
	else {
		return fact(n - 1) * n;
	}
}

int ncr(int n, int r) {

	int num = fact(n);
	int den = fact(r) * fact(n - r);

	return num / den;
};



int main() {

//N == Value, R == Number of combinations you want to achieve


	std::cout << ncr(10,4);
	return 0;

};



-------------------------------------------------------------------------------------------------------------------------- -

























-------------------------------------------------------------------------------------------------------------------------- -




-------------------------------------------------------------------------------------------------------------------------- -

























-------------------------------------------------------------------------------------------------------------------------- -




-------------------------------------------------------------------------------------------------------------------------- -

























-------------------------------------------------------------------------------------------------------------------------- -




-------------------------------------------------------------------------------------------------------------------------- -

























-------------------------------------------------------------------------------------------------------------------------- -




-------------------------------------------------------------------------------------------------------------------------- -

























-------------------------------------------------------------------------------------------------------------------------- -




-------------------------------------------------------------------------------------------------------------------------- -

























-------------------------------------------------------------------------------------------------------------------------- -




-------------------------------------------------------------------------------------------------------------------------- -

























-------------------------------------------------------------------------------------------------------------------------- -




-------------------------------------------------------------------------------------------------------------------------- -

























-------------------------------------------------------------------------------------------------------------------------- -




-------------------------------------------------------------------------------------------------------------------------- -

























-------------------------------------------------------------------------------------------------------------------------- -




-------------------------------------------------------------------------------------------------------------------------- -

























-------------------------------------------------------------------------------------------------------------------------- -




-------------------------------------------------------------------------------------------------------------------------- -

























-------------------------------------------------------------------------------------------------------------------------- -




-------------------------------------------------------------------------------------------------------------------------- -

























-------------------------------------------------------------------------------------------------------------------------- -




-------------------------------------------------------------------------------------------------------------------------- -

























-------------------------------------------------------------------------------------------------------------------------- -




-------------------------------------------------------------------------------------------------------------------------- -

























-------------------------------------------------------------------------------------------------------------------------- -




-------------------------------------------------------------------------------------------------------------------------- -

























-------------------------------------------------------------------------------------------------------------------------- -




-------------------------------------------------------------------------------------------------------------------------- -

























-------------------------------------------------------------------------------------------------------------------------- -




-------------------------------------------------------------------------------------------------------------------------- -

























-------------------------------------------------------------------------------------------------------------------------- -




-------------------------------------------------------------------------------------------------------------------------- -

























-------------------------------------------------------------------------------------------------------------------------- -




-------------------------------------------------------------------------------------------------------------------------- -

























-------------------------------------------------------------------------------------------------------------------------- -




-------------------------------------------------------------------------------------------------------------------------- -

























-------------------------------------------------------------------------------------------------------------------------- -




-------------------------------------------------------------------------------------------------------------------------- -

























-------------------------------------------------------------------------------------------------------------------------- -




-------------------------------------------------------------------------------------------------------------------------- -

























-------------------------------------------------------------------------------------------------------------------------- -




-------------------------------------------------------------------------------------------------------------------------- -

























-------------------------------------------------------------------------------------------------------------------------- -




-------------------------------------------------------------------------------------------------------------------------- -

























-------------------------------------------------------------------------------------------------------------------------- -




-------------------------------------------------------------------------------------------------------------------------- -

























-------------------------------------------------------------------------------------------------------------------------- -




-------------------------------------------------------------------------------------------------------------------------- -

























-------------------------------------------------------------------------------------------------------------------------- -




-------------------------------------------------------------------------------------------------------------------------- -

























-------------------------------------------------------------------------------------------------------------------------- -




-------------------------------------------------------------------------------------------------------------------------- -

























-------------------------------------------------------------------------------------------------------------------------- -




-------------------------------------------------------------------------------------------------------------------------- -

























-------------------------------------------------------------------------------------------------------------------------- -




-------------------------------------------------------------------------------------------------------------------------- -

























-------------------------------------------------------------------------------------------------------------------------- -




-------------------------------------------------------------------------------------------------------------------------- -

























-------------------------------------------------------------------------------------------------------------------------- -




-------------------------------------------------------------------------------------------------------------------------- -

























-------------------------------------------------------------------------------------------------------------------------- -




-------------------------------------------------------------------------------------------------------------------------- -

























-------------------------------------------------------------------------------------------------------------------------- -




-------------------------------------------------------------------------------------------------------------------------- -

























-------------------------------------------------------------------------------------------------------------------------- -




-------------------------------------------------------------------------------------------------------------------------- -

























-------------------------------------------------------------------------------------------------------------------------- -




-------------------------------------------------------------------------------------------------------------------------- -

























-------------------------------------------------------------------------------------------------------------------------- -




-------------------------------------------------------------------------------------------------------------------------- -

























-------------------------------------------------------------------------------------------------------------------------- -




-------------------------------------------------------------------------------------------------------------------------- -

























-------------------------------------------------------------------------------------------------------------------------- -




-------------------------------------------------------------------------------------------------------------------------- -

























-------------------------------------------------------------------------------------------------------------------------- -




-------------------------------------------------------------------------------------------------------------------------- -

























-------------------------------------------------------------------------------------------------------------------------- -




-------------------------------------------------------------------------------------------------------------------------- -

























-------------------------------------------------------------------------------------------------------------------------- -




-------------------------------------------------------------------------------------------------------------------------- -

























-------------------------------------------------------------------------------------------------------------------------- -




-------------------------------------------------------------------------------------------------------------------------- -

























-------------------------------------------------------------------------------------------------------------------------- -




-------------------------------------------------------------------------------------------------------------------------- -

























-------------------------------------------------------------------------------------------------------------------------- -




-------------------------------------------------------------------------------------------------------------------------- -

























-------------------------------------------------------------------------------------------------------------------------- -




-------------------------------------------------------------------------------------------------------------------------- -

























-------------------------------------------------------------------------------------------------------------------------- -




-------------------------------------------------------------------------------------------------------------------------- -

























-------------------------------------------------------------------------------------------------------------------------- -




-------------------------------------------------------------------------------------------------------------------------- -

























-------------------------------------------------------------------------------------------------------------------------- -




-------------------------------------------------------------------------------------------------------------------------- -

























-------------------------------------------------------------------------------------------------------------------------- -




-------------------------------------------------------------------------------------------------------------------------- -

























-------------------------------------------------------------------------------------------------------------------------- -




-------------------------------------------------------------------------------------------------------------------------- -

























-------------------------------------------------------------------------------------------------------------------------- -




-------------------------------------------------------------------------------------------------------------------------- -

























-------------------------------------------------------------------------------------------------------------------------- -




-------------------------------------------------------------------------------------------------------------------------- -

























-------------------------------------------------------------------------------------------------------------------------- -




-------------------------------------------------------------------------------------------------------------------------- -

























-------------------------------------------------------------------------------------------------------------------------- -




-------------------------------------------------------------------------------------------------------------------------- -

























-------------------------------------------------------------------------------------------------------------------------- -




-------------------------------------------------------------------------------------------------------------------------- -

























-------------------------------------------------------------------------------------------------------------------------- -




-------------------------------------------------------------------------------------------------------------------------- -

























-------------------------------------------------------------------------------------------------------------------------- -




-------------------------------------------------------------------------------------------------------------------------- -

























-------------------------------------------------------------------------------------------------------------------------- -




-------------------------------------------------------------------------------------------------------------------------- -

























-------------------------------------------------------------------------------------------------------------------------- -




-------------------------------------------------------------------------------------------------------------------------- -

























-------------------------------------------------------------------------------------------------------------------------- -




-------------------------------------------------------------------------------------------------------------------------- -

























-------------------------------------------------------------------------------------------------------------------------- -




-------------------------------------------------------------------------------------------------------------------------- -

























-------------------------------------------------------------------------------------------------------------------------- -




-------------------------------------------------------------------------------------------------------------------------- -

























-------------------------------------------------------------------------------------------------------------------------- -




-------------------------------------------------------------------------------------------------------------------------- -

























-------------------------------------------------------------------------------------------------------------------------- -




-------------------------------------------------------------------------------------------------------------------------- -

























-------------------------------------------------------------------------------------------------------------------------- -




-------------------------------------------------------------------------------------------------------------------------- -

























-------------------------------------------------------------------------------------------------------------------------- -




-------------------------------------------------------------------------------------------------------------------------- -

























-------------------------------------------------------------------------------------------------------------------------- -




-------------------------------------------------------------------------------------------------------------------------- -

























-------------------------------------------------------------------------------------------------------------------------- -




-------------------------------------------------------------------------------------------------------------------------- -

























-------------------------------------------------------------------------------------------------------------------------- -




-------------------------------------------------------------------------------------------------------------------------- -

























-------------------------------------------------------------------------------------------------------------------------- -




-------------------------------------------------------------------------------------------------------------------------- -

























-------------------------------------------------------------------------------------------------------------------------- -




-------------------------------------------------------------------------------------------------------------------------- -

























-------------------------------------------------------------------------------------------------------------------------- -




-------------------------------------------------------------------------------------------------------------------------- -

























-------------------------------------------------------------------------------------------------------------------------- -




-------------------------------------------------------------------------------------------------------------------------- -

























-------------------------------------------------------------------------------------------------------------------------- -




-------------------------------------------------------------------------------------------------------------------------- -

























-------------------------------------------------------------------------------------------------------------------------- -




-------------------------------------------------------------------------------------------------------------------------- -

























-------------------------------------------------------------------------------------------------------------------------- -




-------------------------------------------------------------------------------------------------------------------------- -

























-------------------------------------------------------------------------------------------------------------------------- -




-------------------------------------------------------------------------------------------------------------------------- -

























-------------------------------------------------------------------------------------------------------------------------- -




-------------------------------------------------------------------------------------------------------------------------- -

























-------------------------------------------------------------------------------------------------------------------------- -




-------------------------------------------------------------------------------------------------------------------------- -

























-------------------------------------------------------------------------------------------------------------------------- -




-------------------------------------------------------------------------------------------------------------------------- -

























-------------------------------------------------------------------------------------------------------------------------- -




-------------------------------------------------------------------------------------------------------------------------- -

























-------------------------------------------------------------------------------------------------------------------------- -




-------------------------------------------------------------------------------------------------------------------------- -

























-------------------------------------------------------------------------------------------------------------------------- -




-------------------------------------------------------------------------------------------------------------------------- -

























-------------------------------------------------------------------------------------------------------------------------- -




-------------------------------------------------------------------------------------------------------------------------- -

























-------------------------------------------------------------------------------------------------------------------------- -




-------------------------------------------------------------------------------------------------------------------------- -

























-------------------------------------------------------------------------------------------------------------------------- -




-------------------------------------------------------------------------------------------------------------------------- -

























-------------------------------------------------------------------------------------------------------------------------- -




-------------------------------------------------------------------------------------------------------------------------- -

























-------------------------------------------------------------------------------------------------------------------------- -




-------------------------------------------------------------------------------------------------------------------------- -

























-------------------------------------------------------------------------------------------------------------------------- -




-------------------------------------------------------------------------------------------------------------------------- -

























-------------------------------------------------------------------------------------------------------------------------- -




-------------------------------------------------------------------------------------------------------------------------- -

























-------------------------------------------------------------------------------------------------------------------------- -




-------------------------------------------------------------------------------------------------------------------------- -

























-------------------------------------------------------------------------------------------------------------------------- -




-------------------------------------------------------------------------------------------------------------------------- -

























-------------------------------------------------------------------------------------------------------------------------- -




-------------------------------------------------------------------------------------------------------------------------- -



*/











